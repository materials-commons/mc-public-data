{"version":3,"sources":["home.service.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,UAAS,EAAE,EAAE,aAAa,EAAE,SAAS,EAAE;AAC9G,MAAI,MAAM,GAAG,aAAa,CAAC;AACzB,QAAI,EAAE,SAAS,CAAC,IAAI,EAAE,GAAG,OAAO;GACjC,CAAC;;;;;;;AAAC,AAOH,MAAI,MAAM,GAAG,UAAS,IAAI,EAAE,MAAM,EAAE;AAClC,QAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1B,QAAI,KAAK,GAAG;AACV,WAAK,EAAE;AACL,YAAI,EAAE,IAAI;OACX;KACF,CAAC;;AAEF,UAAM,CAAC,MAAM,CAAC;AACZ,WAAK,EAAE,SAAS;AAChB,UAAI,EAAE,QAAQ;AACd,UAAI,EAAE;AACJ,YAAI,EAAE,EAAE;AACR,YAAI,EAAE,CAAC,MAAM,IAAI,CAAC,CAAA,GAAI,EAAE;AACxB,aAAK,EAAE,KAAK;OACb;KACF,CAAC,CAAC,IAAI,CAAC,UAAS,MAAM,EAAE;AACvB,UAAI,EAAE,GAAG,CAAC;UAAE,OAAO;UAAE,QAAQ,GAAG,EAAE,CAAC;;AAEnC,aAAO,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAA,CAAE,IAAI,IAAI,EAAE,CAAC;;AAEzC,aAAM,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AAC/B,gBAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;OACpC;;AAED,cAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC5B,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;;AAEpB,WAAO,QAAQ,CAAC,OAAO,CAAC;GACzB;;;AAAC,AAGF,SAAO;AACL,UAAM,EAAE,MAAM;GACf,CAAC;CACH,CAAC,CAAC,CAAC","file":"home.service-compiled.js","sourcesContent":["angular.module.factory('recipeService', ['$q', 'esFactory', '$location', function($q, elasticsearch, $location) {\n  var client = elasticsearch({\n    host: $location.host() + ':9200'\n  });\n\n  /**\n   * Given a term and an offset, load another round of 10 recipes.\n   *\n   * Returns a promise.\n   */\n  var search = function(term, offset) {\n    var deferred = $q.defer();\n    var query = {\n      match: {\n        _all: term\n      }\n    };\n\n    client.search({\n      index: 'recipes',\n      type: 'recipe',\n      body: {\n        size: 10,\n        from: (offset || 0) * 10,\n        query: query\n      }\n    }).then(function(result) {\n      var ii = 0, hits_in, hits_out = [];\n\n      hits_in = (result.hits || {}).hits || [];\n\n      for(; ii < hits_in.length; ii++) {\n        hits_out.push(hits_in[ii]._source);\n      }\n\n      deferred.resolve(hits_out);\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  // Since this is a factory method, we return an object representing the actual service.\n  return {\n    search: search\n  };\n}]);\n"]}